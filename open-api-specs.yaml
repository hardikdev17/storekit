openapi: 3.0.3
info:
  title: Meroku dapp store
  version: '1.2'
  description: 'Open API specs for Meroku Dapp store.'
  contact:
    email: hardik.agarwal@bitpack.me
servers:
  - url: https://localhost:3000/api
tags:
  - name: Dapp Registory
    description: Dapp registory endpoint to `get`, `create`, `update`, `delete` dapp in meroku store
  - name: Store Registory
    description: Meroku store registory to `get` the store title
paths:
  /dapp:
    put:
      tags:
        - Dapp Registory
      summary: For updating the exisitng dapp
      description: Updates the existing dapp
      operationId: updateDapp
      requestBody:
        description: Send the request with the updated parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dapp'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dapp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dapp'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dapp'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Dapp'
        '400':
          description: Invalid ID supplied
        '404':
          description: Dapp not found
        '405':
          description: Validation exception
    post:
      tags:
        - Dapp Registory
      summary: For listing new Dapp to the store
      description: lists the new dapp to the store
      operationId: addDapp
      requestBody:
        description: Send the request with dapp schema parameters 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dapp'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dapp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dapp'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dapp'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Dapp'
        '405':
          description: Invalid input
    get:
      tags:
        - Dapp Registory
      summary: For searching the dapp in the store
      description: User can search dapp by input string along with choosing either one or more filter options
      operationId: getDapps
      parameters:
        - name: query
          in: header
          description: Search string parameter
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: filter options
          required: false
          schema:
            type: object
            properties:
              isListed:
                type: string
              chainId:
                type: integer
              language:
                type: string
              availableOnPlatform:
                type: array
                items:
                  type: string
                  enum:
                    - ios
                    - web
                    - android
                  xml:
                    name: platform name
              matureForAudience:
                type: boolean
              minAge:
                type: integer
              listedOnOrAfter:
                type: string
                format: date
              listedOnOrBefore:
                type: string
                format: date
              allowedInCountries:
                type: array
                items:
                  type: string
                  xml:
                    name: allowedCountry
              blockedInCountries:
                type: array
                items:
                  type: string
                  xml:
                    name: allowedCountry
              categories:
                type: array
                items:
                  type: string
                  enum:
                    - books
                    - business
                    - developer tools
                    - education
                    - entertainment
                    - finance
                    - food and drink
                    - games
                    - graphics and design
                    - health and fitness
                    - lifestyle
                    - kids
                    - magazines and newspapers
                    - medical
                    - music
                    - navigation
                    - news
                    - photo and video
                    - productivity
                    - reference
                    - shopping
                    - social networking
                    - sports
                    - travel
                    - utilities
                    - weather
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dapp'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dapp'
        '400':
          description: Invalid status value
  /dapp/featured:
    get:
      tags:
        - Dapp Registory
      summary: For finding the details of featured dapps
      description: returns all featured dapps
      operationId: getFeaturedDapps
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dapp'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dapp'
        '400':
          description: Invalid status value
  /dapp/title/:
    get:
      tags:
        - Store Registory
      summary: For getting the tittle of the dapp store
      description: Returns the store title
      operationId: getStoreTitle
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /dapp/{dappId}:
    delete:
      tags:
        - Dapp Registory
      summary: For deleteing the dapp in the store
      description: Removes the dapp with particular id from the store 
      operationId: deleteDapp
      parameters:
        - name: email
          in: header
          description: Developer email to check the authenticity of request
          required: true
          schema:
            type: string
        - name: dappId
          in: path
          description: Dapp id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid Dapp id value
components:
  schemas:
    featuredSection:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        key:
          type: string
        dappIds:
          type: array
          items:
            type: string
            xml: 
              name: dappId
    Registory:
      type: object
      properties:
        title: 
          type: string
          example: meroku store
        chains:
          type: array
          example: [1, 80001]
          items:
            type: integer
            xml:
              name: chain
        dapps:
          type: array
          items:
            $ref: '#/components/schemas/Dapp'
        featuredSections:
          type: array
          items:
            $ref: '#/components/schemas/featuredSection'
    Dapp:
      type: object
      properties:
        name:
          type: string
          example: Dapp Name
        description:
          type: string
          example: Description of Dapp
        images:
          type: object
          properties:
            logo:
              type: string
              format: binary
            banner:
              type: string
              format: binary
            screenshots:
              type: array
              items:
                type: string
                format: binary
                xml:
                  name: screenshot
        repoUrl:
          type: string
          format: uri
        dappId:
          type: string
        minAge:
          type: integer
        isMatureForAudience:
          type: boolean
        isSelfModerated:
          type: boolean
        language:
          type: string
        version:
          type: string
        isListed:
          type: boolean
        listDate:
          type: string
          format: date
        availableOnPlatform:
          type: array
          items:
            type: string
            enum:
              - ios
              - web
              - android
            xml:
              name: platform name
        geoRestrictions:
          type: object
          properties:
            allowedCountries:
              type: array
              items:
                type: string
                xml:
                  name: item
            blockedCountries:
              type: array
              items:
                type: string
                xml:
                  name: item
        developer:
          type: object
          properties:
            legalName:
              type: string
            logo:
              type: string
            website:
              type: string
            privacyPolicyUrl:
              type: string
            support:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                email:
                  type: string
                  format: email
            githubId:
              type: string
        tags:
          type: array
          items: 
            type: string
            xml:
              name: tag
        chains:
          type: array
          items: 
            type: integer
            xml:
              name: chain id
        category:
          type: string
          enum:
            - books
            - business
            - developer tools
            - education
            - entertainment
            - finance
            - food and drink
            - games
            - graphics and design
            - health and fitness
            - lifestyle
            - kids
            - magazines and newspapers
            - medical
            - music
            - navigation
            - news
            - photo and video
            - productivity
            - reference
            - shopping
            - social networking
            - sports
            - travel
            - utilities
            - weather
